W4D5S3Q3

app.html
<app-text-formatter></app-text-formatter>

.comp.html -------------------

<input type="text" [(ngModel)]="inputText">
<div>
    <button (click)="formatText('uppercase')">Uppercase</button><br>
    <button (click)="formatText('lowercase')">Lowercase</button><br>
    <button (click)="formatText('capitalize')">Capitalize</button><br>
    <button (click)="formatText('reverse')">Reverse</button><br>
    <button (click)="formatText('')">None</button><br>
</div>
<p>Text: {{ inputText | formatText:selectedFormat:'' }}</p>

comp.ts-----------------

import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-text-formatter',
  templateUrl: './text-formatter.component.html',
  styleUrls: ['./text-formatter.component.css']
})
export class TextFormatterComponent implements OnInit {


  inputText :string = '';
  selectedFormat:string = '';
  formattedText:string = '';
  constructor() { }

  ngOnInit(): void {
  }

  formatText(format:string): void{
    this.selectedFormat = format;
  }
}


format-text.pipe.ts-----------------

import { Pipe, PipeTransform } from '@angular/core';

@Pipe({
  name: 'formatText'
})
export class FormatTextPipe implements PipeTransform {

  transform(formattedText: string, format: string, seperator: string = ''): string {
    if (!formattedText) return
    switch (format) {
      case 'uppercase':
        return formattedText.toUpperCase();
      case 'lowercase':
        return formattedText.toLowerCase();
      case 'capitalize':
        return formattedText.split(seperator)
        .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())
        .join(seperator);
      case 'reverse':
        return formattedText.split('').reverse().join('');
      default:
        return formattedText;
    }
  }
}

